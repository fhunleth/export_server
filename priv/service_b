#!/usr/bin/python2

import time
import sys
import os
import threading

from SimpleXMLRPCServer import SimpleXMLRPCServer
from xmlrpclib import ServerProxy, Error

server_a = ServerProxy("http://localhost:8000")

def start_port_listener(port):
    def listen():
        while True:
            if not port.readline():
                os._exit(0)
            time.sleep(1)
    threading.Thread(target=listen).start()

def crunch(n,m):
    if m < 1:
        # example of fail fast and hard!
        print >> sys.stderr, "m must be positive"
        sys.exit(1)
    x = n
    for y in range(m):
    	x = server_a.add(x, y)
    return x

def run():
    start_port_listener(sys.stdin)

    # A simple server with simple arithmetic functions
    server = SimpleXMLRPCServer(("localhost", 8001), logRequests=False)
    print "Listening on port 8001..."
    server.register_multicall_functions()
    server.register_function(crunch, 'crunch')
    server.serve_forever()

if __name__ == '__main__':
    run()
